<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="iconPic.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAGAAAABgCAYAAADimHc4AAAABGdBTUEAALGPC/xhBQAACAtJREFUeF7t
        nGtsFFUUxwvy8IFvIUqA7m7rgzRRTBNBpdspEBQRnN2m0ZjgIxqNj4gJxi+YWPWDz4BAZ5cG8UE0kJpA
        SGe2IApqQkgQP6ARJEgMRsUUhHZnizwK67lwys7eOdvd2b2zbcP5Jf8v7DnMOf/dnZ1zZ24rGIZhGIZh
        GIZhGIZhGIZhGIZhGIYZalQa9uRgLLkzGE8tqjKOT8R/ZspFMGa/BUr3KRSzfwkZdnOV0V2NIYyfBA17
        r/MNcKgX3oytVXF7BoYyqqmK9dQSxmcpFOuei+GMaoKx1HuU6Q4dqW1Nj8RwRinp9DAw+A/JcFmrMJpR
        TeXK5N2E4VkKxVKzMJxRTShuf0iZfkGG/U9FW/oSDGeUAsaCyYdcpjsVtw2MZlQTiNsaabpTLXYYwy8u
        ND3xoqabHzQ1tfn29Yfr+zhpOgpe/7OiOT0cw/MiahU1hyPWC/hPQ5NwxHy8PmKdBaXrdWvL9LnmtfiS
        MrTm9Agw+bBsulPwBizF8LzUNSXGQr3fn6sZahc94EtDCy1i3Q8NnMJGzitq7oeGJmOIEoJGajZlulOB
        WPc0DO8XUZuoMatm6KGh0bwPQ4YGWjQxDQrvkRrp01Gt0VR2ORgwUqsp0zNK/S5mBAzPSUPUnAu1dUu1
        9inZoJu1GDq4mR6xboGCD0sNyOoN69ZCTCma6uXp0WDyMbfpGcG1/zsYnhNRi6hJqlFWp+gNUwYn2rz2
        G6DQvVLhubQM04omaCTnUaY7VRnvuRPDcwKnyxaiPkp7Z0bWX49pg4tZTVuuhgJ3SwXn0qqKivynhXzA
        cPU5ZbpD+zA0D+lhUNPHUo25tOve+RuvxMTBwZw5idFQ2Fap0Bwyv1RxSTphSfoyMDgpGZ4tw34Tw/NS
        +8yukVBfwl0vqW9Ez5g6wDQ3D6+PJNYSRVLaXNPUNgozSyIUtxtJ0x2qbrFrMLwgaue1X14ftbYTdRNK
        rBW9Y+rAIQYWukCXlH51weA22XBJP2OoJ8Q5HmrdI9VOSvSOaQNDOJpYRBVGaK/4gca0kqkxOseAwT2S
        4bJew3DPwGX0BBgcDxJ9uCQ8wLTykjXl9idoRDSEaUqAS8tHCcOzVN3aVYXhRdHQuKkG6v/X1Y9b5Z+W
        ySmXVOKIaATTlAEGb5QNdwp+H37E0JI4N1BGrRTdW5bKNy3nmXIdMu06vf0uTFPGhI+6rwOTT8qmOxUw
        kq9ieMnAh+1B6Oe0uz+X/J+WC5xyhU406B0zMU0poVjyScp0h86GWv+bhOFKgG/BAugp/+nWz2lZa7Ju
        hAMckA5I6YwWMR/BNOWAwZskw2XtwFClwHl+MdErpQPCK0xTg6cpV088h2nKqYrb48Dg05LhWQrEUi9j
        uHLCurmU7NktdZfcXqbcsG69jmm+EIjbz1KmO9Rb2dpzE4arBwYvTbfWUb0TUjAte5tyl2CWb4gn2wjT
        M4rb32Gob4gli7Ce2ET0T6jEabnQKVeLJD5VsbjWHxNX9IwHk8+4THcoZNjPY7iviNML9L1L9oFSSdNy
        wcu0UesTv98AOP28RJnu0Onq5fZYDPeV2bM3XwF973D5QCgcNVdgWjGkh4lPN/UfuxQ1Y5jkC4GYvZ0w
        PSPD/gpDfcXLb6KSM4OXc55fP8KB+LEAmHzWZbpTRvIpDPcNsYwO3/YNVO+EOoR3mFoans55UVP5ZWDQ
        SL1Cmp7RyUmxLuVPXMiIbznVM6EdYmkb09SAj2vskw5ESfniFHy6fyBMdyhlYqhveBjE9qlc+c1ieqMZ
        ggMckg5I6RQMZHMwrSRCK7tvpk13KJ5agOG+oEWtp6GnQpYiDgmPMM0fxIITHCgpHZhSjxbpmI5pRQM/
        rotJ0zM6fuvqw77do4VPfhR6yffEhFBXXWPH7ZjmL+FIYgYc8IRUAKWuhkj7HZhWFDBc/USYfkFw7b8e
        Q5VT/5BZBz0cl3qidAJ+HxowrTyIBTc48BmpEEKJvzS9I4BpnhD3dCnTnQoY9sMYrhRNt6ZA/V3uflzy
        dfGxXwq+JRk19xezQhiK2W9Qpjtkj29Nq73aAMQHRnxwyF4kDdgtyT483JTfrekbrsG0ggCDf5UMl7UO
        Q5VxT2TzOOL5UFIDflP+PB6m5Uhim/bEtksxsV8CRmoKYXiWKuPJCIYrQWvaNgbq3Omu261yrH8VjMcV
        wo2atm0EpuYE3oC3KdMd6hLPhmJ4yYjnleCK52u6ZpfUTbmq8DIt1+vWmn4/Ped3PB6UDJeU/AyjS0cs
        u+vWF2StbqmfclXhYVoWK6jvYpqLQEv3VNr0jEIrex7A8JKBy+r3yRrd8m/KVYXW2H4bnGaOEMU71dvf
        1UMgnlxCme6Q0g3XeDWXb9g6LHrDlMFNnmm5Uww4GOqmOT0cDP5bMlyW8g3XYtMI1HZUqrVP5ZtyVZFj
        Wt6jzd/U718tEbsZCcOz5NeGa1GbqFGqufxTriqc03I4YplT5ySuwpdyIvbzUqZfkM8brsVGQrGhEM0f
        uClXFXh+XVbIngDc8djpMt2pMmy4PnfjBWoe8Cm33IhTC2m6UxfrhutyAAavchnukNcN14wHatrSo8Dk
        o7LpTonLUwxnVCP+khVlulNiQMNwRjXBWHINZXpGhW24ZoqgkB2PhWy4ZopELCtTpjtVyIZrpkhCLamZ
        YPK3IPLZz0DM/g1DGT85t/3ISD0Gpm8BZZ6E87DhmlGE+LPDASO1EN6AXV43XDMMwzAMwzAMwzAMwzAM
        wzAMwzAMM/BUVPwP2QHI1g3SsQMAAAAASUVORK5CYII=
</value>
  </data>
  <data name="labelDescription.Text" xml:space="preserve">
    <value>Lorem ipsum, or lipsum as it is sometimes known, is dummy text used in laying out print, graphic or web designs. The passage is attributed to an unknown typesetter in the 15th century who is thought to have scrambled parts of Cicero's De Finibus Bonorum et Malorum for use in a type specimen book.</value>
  </data>
</root>